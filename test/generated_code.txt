interface Boolean<>
{
  Boolean<> and (Boolean<> that);
  Boolean<> not ();
}

shape Equatable
{
  Boolean<> equals (THIS that);
}

interface Iterator<ITERATOR_PARAM>
{
  ITERATOR_PARAM next ();
}

shape Addable
{
  THIS plus (THIS that);
}

shape Comparable
    satisfies Equatable
{
  Boolean<> leq (THIS that);
}

interface Number<>
    satisfies Comparable, Addable
{
  Number<> max3 (Number<> num1, Number<> num2);
  Integer<> intValue ();
  Long<> longValue ();
  Boolean<> isZero ();
}

interface Integer<>
    implements Number<>
    satisfies Comparable, Addable
{

}

interface Long<>
    implements Number<>
    satisfies Comparable, Addable
{

}

interface Iterable<ITERABLE_PARAM>
{
  Iterator<Bot> getIterator ();
  Integer<> getLength ();
  [[super ITERABLE_PARAM satisfies Equatable]] Boolean<> contains (super ITERABLE_PARAM value);
}

/* success! */
